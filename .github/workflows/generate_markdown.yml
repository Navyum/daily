name: Generate Daily Markdown

on:
  schedule:
    - cron: '01 8 * * *'  # 每天UTC时间早上8:01（北京时间下午4:10自动运行）
  workflow_dispatch:  # 手动触发

jobs:
  doc-gen:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        pip install -r requirements.txt

    - name: Generate Markdown
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        PRODUCTHUNT_CLIENT_ID: ${{ secrets.PRODUCTHUNT_CLIENT_ID }}
        PRODUCTHUNT_CLIENT_SECRET: ${{ secrets.PRODUCTHUNT_CLIENT_SECRET }}
        TENCENT_SECRET_ID: ${{ secrets.TENCENT_SECRET_ID }}
        TENCENT_SECRET_KEY: ${{ secrets.TENCENT_SECRET_KEY }}
      run: |
        python scripts/product_hunt_list_to_md.py

    - name: Commit files
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add -A
        git commit -m "Auto Generate Today Content"
        
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        branch: ${{ github.ref }}

  doc-build:
    needs: doc-gen
    runs-on: ubuntu-latest
    env:
      FTP_HOST: ${{ secrets.ftp_host }}
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4
        with:
          # 获取所有标记和分支的所有历史记录（updatetime 必须，否则每次都会变化）
          fetch-depth: 0
          # 如果文档包含 Git 子模块，请取消注释下一行
          # submodules: true

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      # 复制读书笔记到静态页面路径，并构建页面
      - name: Build Docs
        env:
          NODE_OPTIONS: --max_old_space_size=8192
        run: |-
          pnpm cpx "docs/reading/**" docs/.vuepress/public/reading
          pnpm run docs:build
          > docs/.vuepress/dist/.nojekyll
          
      - name: Deploy GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          # 指定静态文件部署到的分支
          branch: gh-pages
          folder: docs/.vuepress/dist

  doc-deploy:
    # Add a dependency to the build job
    needs: doc-build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: upload artifact
        uses: actions/upload-pages-artifact@v3
        with: 
          path: .
      
      - name: Configure Pages
        uses: actions/configure-pages@v4
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
